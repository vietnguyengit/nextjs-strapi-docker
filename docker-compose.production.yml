version: "3.3"
services:
  traefik:
    image: 900657927515.dkr.ecr.ap-southeast-2.amazonaws.com/nextjs-traefik:latest
    build:
      context: ./traefik
    command:
      #- "--log.level=DEBUG"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  nginx:
    image: 900657927515.dkr.ecr.ap-southeast-2.amazonaws.com/nextjs-nginx:latest
    build:
      context: ./frontend/nginx
    depends_on:
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`) || Host(`simis.com.au`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.entrypoints=web"

  frontend:
    image: 900657927515.dkr.ecr.ap-southeast-2.amazonaws.com/nextjs-frontend:latest
    depends_on:
      - backend
    build:
      context: ./frontend
    environment:
      NODE_ENV: production

  backend:
    image: 900657927515.dkr.ecr.ap-southeast-2.amazonaws.com/nextjs-backend:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.localhost`) || Host(`backend.simis.com.au`)"
      - "traefik.http.services.backend.loadbalancer.server.port=1337"
      - "traefik.http.routers.backend.entrypoints=web"
    build:
      context: ./backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
    volumes:
      - ./backend/config:/opt/app/config
      - ./backend/src:/opt/app/src
      - ./backend/package.json:/opt/package.json
      - ./backend/yarn.lock:/opt/yarn.lock
